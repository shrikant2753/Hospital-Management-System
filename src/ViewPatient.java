
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hp
 */
public class ViewPatient extends javax.swing.JFrame {

    /**
     * Creates new form ViewPatient
     */
    public ViewPatient() throws SQLException {
        initComponents();
        try {
            Connect();
        } catch (InstantiationException ex) {
            Logger.getLogger(ViewPatient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ViewPatient.class.getName()).log(Level.SEVERE, null, ex);
        }
        autoIncrId();
        patientTable();
        
    }
    
    Connection conn;
    PreparedStatement pst;
    ResultSet rs;
    static final String DB_URL = "jdbc:mysql://localhost:3306/hospitalmanagementsystem";
    static final String USER = "root";
    static final String PASS = "";
    
    public void Connect() throws InstantiationException, IllegalAccessException{
        try {
            //Class.forName ("com.mysql.cj.jdbc.Driver").newInstance();
            Class.forName("com.mysql.cj.jdbc.Driver");
              conn = DriverManager.getConnection(DB_URL, USER, PASS);
             System.out.print("Data base connection establish");
        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println("Cannot connect to database server"+ ex);
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void autoIncrId() throws SQLException{
        java.sql.Statement s =  conn.createStatement();
        rs = s.executeQuery("select MAX(Pid)from patient");
        rs.next();
        rs.getString("MAX(Pid)");
        
        if(rs.getString("MAX(Pid)")==null){
            txtPid.setText("PS001");
        }
        else{
            long id = Long.parseLong(rs.getString("MAX(Pid)").substring(2,rs.getString("MAX(Pid)").length() ));
            id++;
            txtPid.setText("PS"+String.format("%03d", id));
        }
        
    }
    
    
    public void patientTable(){
        try {
            pst = conn.prepareStatement("Select * from patient");
            rs = pst.executeQuery();
            java.sql.ResultSetMetaData rsm = rs.getMetaData();
            int c = rsm.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
            df.setRowCount(0);
            
            while(rs.next()){
                Vector v = new Vector();
                
                for(int i=0; i<c; i++){
                    v.add(rs.getString(1));
                    v.add(rs.getString(2));
                    v.add(rs.getString(3));
                    v.add(rs.getString(4));
                    v.add(rs.getString(5));
                    v.add(rs.getString(6));
                    v.add(rs.getString(7));
                    v.add(rs.getString(8));
                    v.add(rs.getString(9));
                    v.add(rs.getString(10));
                }
                df.addRow(v);
            }
                    
        } catch (SQLException ex) {
            Logger.getLogger(ViewPatient.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtMobno = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtDoctor = new javax.swing.JComboBox<>();
        txtPid = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtBloodGroup = new javax.swing.JComboBox<>();
        txtGender = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtHealthIssue = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane2.setViewportView(txtAddress);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        txtDoctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        txtDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        txtBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "O+", "A+", "B+", "AB+", "O-", "A-", "B-", "Ab-" }));
        txtBloodGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBloodGroupActionPerformed(evt);
            }
        });

        txtGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PId", "First Name", "Last Name", "Age", "Blood Group", "Gender", "Mobile No", "Address", "HealthIssue	healthIssue", "Doctor"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(40);
        }

        txtHealthIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHealthIssueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(879, Short.MAX_VALUE)
                .addComponent(txtHealthIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(txtPid, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMobno, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(125, 125, 125)
                            .addComponent(txtDoctor, 0, 136, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(52, 52, 52)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(35, 35, 35)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(txtHealthIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(397, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFirstName)
                            .addComponent(txtLastName)
                            .addComponent(txtAge)
                            .addComponent(txtBloodGroup)
                            .addComponent(txtGender)
                            .addComponent(txtMobno)
                            .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(34, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
        int selectIndex = jTable1.getSelectedRow();
        
        txtPid.setText(d1.getValueAt(selectIndex, 0).toString());
        txtFirstName.setText(d1.getValueAt(selectIndex, 1).toString());
        txtLastName.setText(d1.getValueAt(selectIndex, 2).toString());
        txtAge.setText(d1.getValueAt(selectIndex, 3).toString());
        txtBloodGroup.setSelectedItem(d1.getValueAt(selectIndex, 4).toString());
        txtGender.setSelectedItem(d1.getValueAt(selectIndex, 5).toString());
        txtMobno.setText(d1.getValueAt(selectIndex, 6).toString());
        txtAddress.setText(d1.getValueAt(selectIndex, 7).toString());
        txtHealthIssue.setText(d1.getValueAt(selectIndex, 8).toString());
        //txtDoctor.setSelectedIndex(-1);
        
        jButton1.setEnabled(false);
        
       
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        String pid = txtPid.getText();
        String firstName = txtFirstName.getText();
        String lastName = txtLastName.getText();
        String age = txtAge.getText();
        String bloodGroup = txtBloodGroup.getSelectedItem().toString();
        String gender = txtGender.getSelectedItem().toString();
        String mob = txtMobno.getText();
        String address = txtAddress.getText();
        String 	healthIssue = txtHealthIssue.getText();
        String doctor = txtDoctor.getSelectedItem().toString();
        
        JFrame frame = new JFrame("Update Patient Information");
        if(JOptionPane.showConfirmDialog(frame, "Click yes to update patient Information?","Hospital Mangement System",
                JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
        
            try {
               pst = conn.prepareStatement("update patient set firstName = ?, lastName = ?, age = ?, bloodGroup = ?, gender = ?, mobNo = ?, address = ?, healthIssue = ?,"
                        + "doctor = ? where pid = ?");
                pst.setString(1, firstName);
                pst.setString(2, lastName);
                pst.setString(3, age);
                pst.setString(4, bloodGroup);
                pst.setString(5, gender);
                pst.setString(6, mob);
                pst.setString(7, address);
                pst.setString(8, 	healthIssue);
                pst.setString(9, doctor);
                pst.setString(10, pid);
                pst.execute();
                JOptionPane.showMessageDialog(this, "Patient Information Updated Successfully");

                autoIncrId();
                txtPid.setText("");
                txtAge.setText("");
                txtFirstName.setText("");
                txtLastName.setText("");
                txtAge.setText("");
                txtAddress.setText("");
                txtBloodGroup.setSelectedIndex(0);
                txtGender.setSelectedIndex(0);
                txtMobno.setText("");
                txtHealthIssue.setText("");
                txtDoctor.setSelectedIndex(0);
                jButton1.setEnabled(true);
                patientTable();

            } catch (SQLException ex) {
                Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Request fail");
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        
        String pid = txtPid.getText();
        JFrame frame = new JFrame("Delete Patient");
        if(JOptionPane.showConfirmDialog(frame, "Are you sure?","Hospital Mangement System",
                JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){

            try {
                pst = conn.prepareStatement("delete from patient where pid = ?");
                pst.setString(1, pid);
                pst.execute();
                JOptionPane.showMessageDialog(this, "Patient Information Deleted Successfully");

                autoIncrId();
                txtFirstName.setText("");
                txtLastName.setText("");
                txtAge.setText("");
                txtAddress.setText("");
                txtBloodGroup.setSelectedIndex(-1);
                txtGender.setSelectedIndex(-1);
                txtMobno.setText("");
                txtHealthIssue.setText("");
                txtDoctor.setSelectedIndex(-1);
                txtFirstName.requestFocus();
                jButton1.setEnabled(true);
                patientTable();

            } catch (SQLException ex) {
                Logger.getLogger(ViewPatient.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Request fail");
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String pid = txtPid.getText();
        String firstName = txtFirstName.getText();
        String lastName = txtLastName.getText();
        String age = txtAge.getText();
        String bloodGroup = txtBloodGroup.getSelectedItem().toString();
        String gender = txtGender.getSelectedItem().toString();
        String mob = txtMobno.getText();
        String address = txtAddress.getText();
        String department = txtHealthIssue.getText();
        String doctor = txtDoctor.getSelectedItem().toString();
        try {
            pst = conn.prepareStatement("Insert into patient(Pid, firstName, lastName, age, bloodGroup,gender, mobNo, address, department, doctor)"
                    + "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
            pst.setString(1, pid);
            pst.setString(2, firstName);
            pst.setString(3, lastName);
            pst.setString(4, age);
            pst.setString(5, bloodGroup);
            pst.setString(6, gender);
            pst.setString(7, mob);
            pst.setString(8, address);
            pst.setString(9, department);
            pst.setString(10, doctor);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Patient added Successfully");
            
            autoIncrId();
            txtAge.setText("");
            txtFirstName.setText("");
            txtLastName.setText("");
            txtAge.setText("");
            txtAddress.setText("");
            txtBloodGroup.setSelectedIndex(-1);
            txtGender.setSelectedIndex(-1);
            txtMobno.setText("");
            txtHealthIssue.setText("");
            txtDoctor.setSelectedIndex(-1);
            txtFirstName.requestFocus();
            patientTable();
            
        } catch (SQLException ex) {
            Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Request fail");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtBloodGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBloodGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBloodGroupActionPerformed

    private void txtHealthIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHealthIssueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHealthIssueActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ViewPatient().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewPatient.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JComboBox<String> txtBloodGroup;
    private javax.swing.JComboBox<String> txtDoctor;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JComboBox<String> txtGender;
    private javax.swing.JTextField txtHealthIssue;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMobno;
    private javax.swing.JLabel txtPid;
    // End of variables declaration//GEN-END:variables
}
